/* eslint-disable */
import * as types from './graphql';
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n  query v3Account($first: Int! $orderBy: Account_orderBy $orderDirection: OrderDirection $where: Account_filter) {\n    accounts(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n    }\n  }\n": types.V3AccountDocument,
    "\n  query v3AccountAggregateStat($first: Int! $orderBy: AccountAggregateStat_orderBy $orderDirection: OrderDirection $where:AccountAggregateStat_filter) {\n    accountAggregateStats(\n        first:$first \n        orderBy:$orderBy \n        orderDirection:$orderDirection\n        where: $where\n    ) {\n      id\n      account {\n        id\n      }\n      market {\n        id\n        marketName\n        perpsMarketId\n        marketSymbol\n      }\n      positionPnl\n      accountPnl\n      timestamp\n      block\n    }\n  }\n": types.V3AccountAggregateStatDocument,
    "\n  query v3AccountFull(\n    $first: Int! \n    $orderBy: Account_orderBy,\n    $orderDirection: OrderDirection,\n    $where: Account_filter,\n    $positionFirst: Int!,\n    $positionOrderBy: Position_orderBy,\n    $positionOrderDirection: OrderDirection,\n    $positionWhere: Position_filter,\n    $liquidationFirst: Int!,\n    $liquidationOrderBy: Liquidation_orderBy,\n    $liquidationOrderDirection: OrderDirection,\n    $liquidationWhere: Liquidation_filter,\n    ) {\n    accounts(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n        positions(\n            first:$positionFirst \n            orderBy:$positionOrderBy \n            orderDirection:$positionOrderDirection\n            where: $positionWhere\n            )\n                {\n                    id\n                    trackingCode\n                    isOpen\n                    isLiquidated\n                    status\n                    direction\n                    openTimestamp\n                    closeTimestamp\n                    entryPrice\n                    exitPrice\n                    lastFillPrice\n                    size\n                    notionalAmount\n                    realizedPnl\n                    totalFees\n                    totalVolume\n                    totalTrades\n                    accruedFunding\n                    interestCharged\n                    averageEntryPrice\n                    unrealizedPnl\n                    market {\n                      id\n                      marketName\n                      marketSymbol\n                      price\n                    }\n                    trades {\n                      id\n                      sizeDelta\n                      pnl\n                    }\n                }\n                liquidations(first: $liquidationFirst where: $liquidationWhere orderBy: $liquidationOrderBy orderDirection: $liquidationOrderDirection) {\n                        id\n    \t                timestamp\n    \t                transactionHash\n    \t                account {\n                            id\n                        }\n    \t                market {\n                            id\n                            marketName\n                            marketSymbol\n                            price\n                        }\n    \t                amountLiquidated\n    \t                liquidationType\n    \t                currentPositionSize\n    \t                notionalAmount\n    \t                marketPrice\n    \t              \n                }\n    }\n  }\n": types.V3AccountFullDocument,
    "\n  query v3AccountOne($id: ID!) {\n    account(id: $id) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalMargin\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n    }\n  }\n": types.V3AccountOneDocument,
    "\n  query v3Liquidation($first: Int!, $orderBy: Liquidation_orderBy, $orderDirection: OrderDirection, $where: Liquidation_filter) {\n    liquidations(first: $first where: $where orderBy: $orderBy orderDirection: $orderDirection) {\n      id\n    \ttimestamp\n    \ttransactionHash\n    \taccount {\n            id\n        }\n    \tmarket {\n            id\n            marketName\n            marketSymbol\n            price\n        }\n    \tamountLiquidated\n    \tliquidationType\n    \tcurrentPositionSize\n    \tnotionalAmount\n    \tmarketPrice\n    \tposition {\n            id\n            isLiquidated\n            direction\n            status\n            realizedPnl\n            totalFees\n            accruedFunding\n            totalTrades\n            totalVolume\n            averageEntryPrice\n            trackingCode\n\n      }\n    }\n  }\n": types.V3LiquidationDocument,
    "\n  query v3Market($first: Int! $orderBy: Market_orderBy $orderDirection: OrderDirection $where: Market_filter) {\n    markets(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        perpsMarketId\n        marketName\n        marketSymbol\n        price\n        skew\n        size\n        sizeDelta\n        currentFundingRate\n        currentFundingVelocity\n        interestRate\n        feedId\n        maxFundingVelocity\n        skewScale\n        lockedOiPercent\n        initialMarginRatioD18\n        minimumInitialMarginRatioD18\n        flagRewardRatioD18\n        minimumPositionMargin\n        maxSecondsInLiquidationWindow\n        makerFee\n        takerFee \n    }\n  }\n": types.V3MarketDocument,
    "\n  query v3Position($first: Int!, $orderBy: Position_orderBy, $orderDirection: OrderDirection, $where: Position_filter) {\n    positions(\n        first:$first \n        orderBy:$orderBy \n        orderDirection:$orderDirection\n        where: $where\n        ){\n          id\n          trackingCode\n          isOpen\n          isLiquidated\n          status\n          direction\n          openTimestamp\n          closeTimestamp\n          entryPrice\n          exitPrice\n          lastFillPrice\n          size\n          notionalAmount\n          realizedPnl\n          realizedPnlWithFees\n          positionPnl\n          totalFees\n          totalVolume\n          totalTrades\n          accruedFunding\n          interestCharged\n          averageEntryPrice\n          unrealizedPnl\n          market {\n            id\n            marketName\n            marketSymbol\n            price\n          }\n          account {\n            id\n            accountId\n            owner\n          }\n          trades {\n            id\n            sizeDelta\n            pnl\n          }\n          liquidation {\n            id\n            timestamp\n            amountLiquidated\n          }\n      }\n  }\n  ": types.V3PositionDocument,
    "\n  query v3Trade($first: Int!, $orderBy: Trade_orderBy, $orderDirection: OrderDirection, $where: Trade_filter) {\n    trades(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id \n    \tposition {\n            id\n        }\n    \taccount {\n            id\n            owner\n        }\n    \tmarket {\n            id\n            marketName\n            marketSymbol\n            price\n        }\n        fillPrice\n        pnl\n        realizedPnl\n        accruedFunding\n        sizeDelta\n        newSize\n    \tvolume\n    \tnotionalAmount\n        totalFees\n        referralFees\n        collectedFees\n        settlementReward\n        trackingCode\n        settler\n        block\n        timestamp\n        transactionHash\n        interestCharged\n        tradeType\n    }\n  }\n": types.V3TradeDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query v3Account($first: Int! $orderBy: Account_orderBy $orderDirection: OrderDirection $where: Account_filter) {\n    accounts(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n    }\n  }\n"): (typeof documents)["\n  query v3Account($first: Int! $orderBy: Account_orderBy $orderDirection: OrderDirection $where: Account_filter) {\n    accounts(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query v3AccountAggregateStat($first: Int! $orderBy: AccountAggregateStat_orderBy $orderDirection: OrderDirection $where:AccountAggregateStat_filter) {\n    accountAggregateStats(\n        first:$first \n        orderBy:$orderBy \n        orderDirection:$orderDirection\n        where: $where\n    ) {\n      id\n      account {\n        id\n      }\n      market {\n        id\n        marketName\n        perpsMarketId\n        marketSymbol\n      }\n      positionPnl\n      accountPnl\n      timestamp\n      block\n    }\n  }\n"): (typeof documents)["\n  query v3AccountAggregateStat($first: Int! $orderBy: AccountAggregateStat_orderBy $orderDirection: OrderDirection $where:AccountAggregateStat_filter) {\n    accountAggregateStats(\n        first:$first \n        orderBy:$orderBy \n        orderDirection:$orderDirection\n        where: $where\n    ) {\n      id\n      account {\n        id\n      }\n      market {\n        id\n        marketName\n        perpsMarketId\n        marketSymbol\n      }\n      positionPnl\n      accountPnl\n      timestamp\n      block\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query v3AccountFull(\n    $first: Int! \n    $orderBy: Account_orderBy,\n    $orderDirection: OrderDirection,\n    $where: Account_filter,\n    $positionFirst: Int!,\n    $positionOrderBy: Position_orderBy,\n    $positionOrderDirection: OrderDirection,\n    $positionWhere: Position_filter,\n    $liquidationFirst: Int!,\n    $liquidationOrderBy: Liquidation_orderBy,\n    $liquidationOrderDirection: OrderDirection,\n    $liquidationWhere: Liquidation_filter,\n    ) {\n    accounts(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n        positions(\n            first:$positionFirst \n            orderBy:$positionOrderBy \n            orderDirection:$positionOrderDirection\n            where: $positionWhere\n            )\n                {\n                    id\n                    trackingCode\n                    isOpen\n                    isLiquidated\n                    status\n                    direction\n                    openTimestamp\n                    closeTimestamp\n                    entryPrice\n                    exitPrice\n                    lastFillPrice\n                    size\n                    notionalAmount\n                    realizedPnl\n                    totalFees\n                    totalVolume\n                    totalTrades\n                    accruedFunding\n                    interestCharged\n                    averageEntryPrice\n                    unrealizedPnl\n                    market {\n                      id\n                      marketName\n                      marketSymbol\n                      price\n                    }\n                    trades {\n                      id\n                      sizeDelta\n                      pnl\n                    }\n                }\n                liquidations(first: $liquidationFirst where: $liquidationWhere orderBy: $liquidationOrderBy orderDirection: $liquidationOrderDirection) {\n                        id\n    \t                timestamp\n    \t                transactionHash\n    \t                account {\n                            id\n                        }\n    \t                market {\n                            id\n                            marketName\n                            marketSymbol\n                            price\n                        }\n    \t                amountLiquidated\n    \t                liquidationType\n    \t                currentPositionSize\n    \t                notionalAmount\n    \t                marketPrice\n    \t              \n                }\n    }\n  }\n"): (typeof documents)["\n  query v3AccountFull(\n    $first: Int! \n    $orderBy: Account_orderBy,\n    $orderDirection: OrderDirection,\n    $where: Account_filter,\n    $positionFirst: Int!,\n    $positionOrderBy: Position_orderBy,\n    $positionOrderDirection: OrderDirection,\n    $positionWhere: Position_filter,\n    $liquidationFirst: Int!,\n    $liquidationOrderBy: Liquidation_orderBy,\n    $liquidationOrderDirection: OrderDirection,\n    $liquidationWhere: Liquidation_filter,\n    ) {\n    accounts(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n        positions(\n            first:$positionFirst \n            orderBy:$positionOrderBy \n            orderDirection:$positionOrderDirection\n            where: $positionWhere\n            )\n                {\n                    id\n                    trackingCode\n                    isOpen\n                    isLiquidated\n                    status\n                    direction\n                    openTimestamp\n                    closeTimestamp\n                    entryPrice\n                    exitPrice\n                    lastFillPrice\n                    size\n                    notionalAmount\n                    realizedPnl\n                    totalFees\n                    totalVolume\n                    totalTrades\n                    accruedFunding\n                    interestCharged\n                    averageEntryPrice\n                    unrealizedPnl\n                    market {\n                      id\n                      marketName\n                      marketSymbol\n                      price\n                    }\n                    trades {\n                      id\n                      sizeDelta\n                      pnl\n                    }\n                }\n                liquidations(first: $liquidationFirst where: $liquidationWhere orderBy: $liquidationOrderBy orderDirection: $liquidationOrderDirection) {\n                        id\n    \t                timestamp\n    \t                transactionHash\n    \t                account {\n                            id\n                        }\n    \t                market {\n                            id\n                            marketName\n                            marketSymbol\n                            price\n                        }\n    \t                amountLiquidated\n    \t                liquidationType\n    \t                currentPositionSize\n    \t                notionalAmount\n    \t                marketPrice\n    \t              \n                }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query v3AccountOne($id: ID!) {\n    account(id: $id) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalMargin\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n    }\n  }\n"): (typeof documents)["\n  query v3AccountOne($id: ID!) {\n    account(id: $id) {\n        id\n        owner\n        feesPaid\n        pnl\n        totalLiquidations\n        totalMargin\n        totalTrades\n        totalVolume\n        totalOpenPositions\n        totalClosedPositions\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query v3Liquidation($first: Int!, $orderBy: Liquidation_orderBy, $orderDirection: OrderDirection, $where: Liquidation_filter) {\n    liquidations(first: $first where: $where orderBy: $orderBy orderDirection: $orderDirection) {\n      id\n    \ttimestamp\n    \ttransactionHash\n    \taccount {\n            id\n        }\n    \tmarket {\n            id\n            marketName\n            marketSymbol\n            price\n        }\n    \tamountLiquidated\n    \tliquidationType\n    \tcurrentPositionSize\n    \tnotionalAmount\n    \tmarketPrice\n    \tposition {\n            id\n            isLiquidated\n            direction\n            status\n            realizedPnl\n            totalFees\n            accruedFunding\n            totalTrades\n            totalVolume\n            averageEntryPrice\n            trackingCode\n\n      }\n    }\n  }\n"): (typeof documents)["\n  query v3Liquidation($first: Int!, $orderBy: Liquidation_orderBy, $orderDirection: OrderDirection, $where: Liquidation_filter) {\n    liquidations(first: $first where: $where orderBy: $orderBy orderDirection: $orderDirection) {\n      id\n    \ttimestamp\n    \ttransactionHash\n    \taccount {\n            id\n        }\n    \tmarket {\n            id\n            marketName\n            marketSymbol\n            price\n        }\n    \tamountLiquidated\n    \tliquidationType\n    \tcurrentPositionSize\n    \tnotionalAmount\n    \tmarketPrice\n    \tposition {\n            id\n            isLiquidated\n            direction\n            status\n            realizedPnl\n            totalFees\n            accruedFunding\n            totalTrades\n            totalVolume\n            averageEntryPrice\n            trackingCode\n\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query v3Market($first: Int! $orderBy: Market_orderBy $orderDirection: OrderDirection $where: Market_filter) {\n    markets(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        perpsMarketId\n        marketName\n        marketSymbol\n        price\n        skew\n        size\n        sizeDelta\n        currentFundingRate\n        currentFundingVelocity\n        interestRate\n        feedId\n        maxFundingVelocity\n        skewScale\n        lockedOiPercent\n        initialMarginRatioD18\n        minimumInitialMarginRatioD18\n        flagRewardRatioD18\n        minimumPositionMargin\n        maxSecondsInLiquidationWindow\n        makerFee\n        takerFee \n    }\n  }\n"): (typeof documents)["\n  query v3Market($first: Int! $orderBy: Market_orderBy $orderDirection: OrderDirection $where: Market_filter) {\n    markets(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id\n        perpsMarketId\n        marketName\n        marketSymbol\n        price\n        skew\n        size\n        sizeDelta\n        currentFundingRate\n        currentFundingVelocity\n        interestRate\n        feedId\n        maxFundingVelocity\n        skewScale\n        lockedOiPercent\n        initialMarginRatioD18\n        minimumInitialMarginRatioD18\n        flagRewardRatioD18\n        minimumPositionMargin\n        maxSecondsInLiquidationWindow\n        makerFee\n        takerFee \n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query v3Position($first: Int!, $orderBy: Position_orderBy, $orderDirection: OrderDirection, $where: Position_filter) {\n    positions(\n        first:$first \n        orderBy:$orderBy \n        orderDirection:$orderDirection\n        where: $where\n        ){\n          id\n          trackingCode\n          isOpen\n          isLiquidated\n          status\n          direction\n          openTimestamp\n          closeTimestamp\n          entryPrice\n          exitPrice\n          lastFillPrice\n          size\n          notionalAmount\n          realizedPnl\n          realizedPnlWithFees\n          positionPnl\n          totalFees\n          totalVolume\n          totalTrades\n          accruedFunding\n          interestCharged\n          averageEntryPrice\n          unrealizedPnl\n          market {\n            id\n            marketName\n            marketSymbol\n            price\n          }\n          account {\n            id\n            accountId\n            owner\n          }\n          trades {\n            id\n            sizeDelta\n            pnl\n          }\n          liquidation {\n            id\n            timestamp\n            amountLiquidated\n          }\n      }\n  }\n  "): (typeof documents)["\n  query v3Position($first: Int!, $orderBy: Position_orderBy, $orderDirection: OrderDirection, $where: Position_filter) {\n    positions(\n        first:$first \n        orderBy:$orderBy \n        orderDirection:$orderDirection\n        where: $where\n        ){\n          id\n          trackingCode\n          isOpen\n          isLiquidated\n          status\n          direction\n          openTimestamp\n          closeTimestamp\n          entryPrice\n          exitPrice\n          lastFillPrice\n          size\n          notionalAmount\n          realizedPnl\n          realizedPnlWithFees\n          positionPnl\n          totalFees\n          totalVolume\n          totalTrades\n          accruedFunding\n          interestCharged\n          averageEntryPrice\n          unrealizedPnl\n          market {\n            id\n            marketName\n            marketSymbol\n            price\n          }\n          account {\n            id\n            accountId\n            owner\n          }\n          trades {\n            id\n            sizeDelta\n            pnl\n          }\n          liquidation {\n            id\n            timestamp\n            amountLiquidated\n          }\n      }\n  }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query v3Trade($first: Int!, $orderBy: Trade_orderBy, $orderDirection: OrderDirection, $where: Trade_filter) {\n    trades(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id \n    \tposition {\n            id\n        }\n    \taccount {\n            id\n            owner\n        }\n    \tmarket {\n            id\n            marketName\n            marketSymbol\n            price\n        }\n        fillPrice\n        pnl\n        realizedPnl\n        accruedFunding\n        sizeDelta\n        newSize\n    \tvolume\n    \tnotionalAmount\n        totalFees\n        referralFees\n        collectedFees\n        settlementReward\n        trackingCode\n        settler\n        block\n        timestamp\n        transactionHash\n        interestCharged\n        tradeType\n    }\n  }\n"): (typeof documents)["\n  query v3Trade($first: Int!, $orderBy: Trade_orderBy, $orderDirection: OrderDirection, $where: Trade_filter) {\n    trades(first: $first orderBy: $orderBy orderDirection: $orderDirection where: $where) {\n        id \n    \tposition {\n            id\n        }\n    \taccount {\n            id\n            owner\n        }\n    \tmarket {\n            id\n            marketName\n            marketSymbol\n            price\n        }\n        fillPrice\n        pnl\n        realizedPnl\n        accruedFunding\n        sizeDelta\n        newSize\n    \tvolume\n    \tnotionalAmount\n        totalFees\n        referralFees\n        collectedFees\n        settlementReward\n        trackingCode\n        settler\n        block\n        timestamp\n        transactionHash\n        interestCharged\n        tradeType\n    }\n  }\n"];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;